Version 0.2.0 Release Notes 

Simple tools for storing values while efficiently keeping it encrypted in the memory.

- EncryptionTools class. Not a class you should use.
 But it is a requirement to have it if you want to use most of the classes and structs.
 Just copy it with all the other files and forget about it.
 This is just a static class the classes uses to get a random float.

- Added Encrypted Integers 
 A group of classes for storing an integer while efficiently keeping it encrypted in the memory.
 In the memory it is saved as a floating-point number that is affected by random values.
 { encryptionKey1 & encryptionKey2 } You can also reset the key's value with a method.
 
* EncryptedInt - The classic EncryptedInt class. Simple and most recommended.
* EncryptedInteger<> - A generic EncryptedInt class that can store all type of integers (sbyte, short, int, long)
* EncryptedInt08 - A class inherited from the generic EncryptedInteger class, ready for storing an 8-bit integer (sbyte).
* EncryptedInt16 - A class inherited from the generic EncryptedInteger class, ready for storing a 16-bit integer (short).
* EncryptedInt32 - A class inherited from the generic EncryptedInteger class, ready for storing a 32-bit integer (int).
* EncryptedInt64 - A class inherited from the generic EncryptedInteger class, ready for storing a 64-bit integer (long).

- Created a full WIKI with examples and tutorial.